apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.0 rc1'

    defaultConfig {
        applicationId "com.fionera.rxgank"
        minSdkVersion 25
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/layouts/test',
                    'src/main/res/layouts/recycler_item',
            ]
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    debugCompile project(path: ':base', configuration: 'debug')
    releaseCompile project(path: ':base', configuration: 'release')

    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    // Dagger2
    compile 'com.google.dagger:dagger-android:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    // Stetho-OkHttp-Realm
    debugCompile 'com.facebook.stetho:stetho:1.4.2'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.2'
    debugCompile 'com.uphyca:stetho_realm:2.0.0'
}

class BuildTimeListener implements TaskExecutionListener, BuildListener {
    private org.gradle.internal.time.Clock clock
    private times = []

    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.internal.time.Clock()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.getElapsedMillis()
        times.add([ms, task.path])

//        task.project.logger.warn "${task.path} spend ${ms}ms"
    }

    @Override
    void buildStarted(Gradle gradle) {

    }

    @Override
    void settingsEvaluated(Settings settings) {

    }

    @Override
    void projectsLoaded(Gradle gradle) {

    }

    @Override
    void projectsEvaluated(Gradle gradle) {

    }

    @Override
    void buildFinished(BuildResult result) {
        println "Task spend time:"
        for (time in times) {
            if (time[0] >= 50) {
                printf "%7sms  %s\n", time
            }
        }
    }

}

project.gradle.addListener(new BuildTimeListener())
